{"version":3,"sources":["sound/fart.ogg","sound/start.ogg","sound/start_vote.ogg","sound/pickup.ogg","sound/die.ogg","sound/engine.ogg","sound/shot.ogg","sound/scan.ogg","Button.ts","Room.tsx","OxygenIndicator.tsx","rooms/admin.jpg","rooms/bottom_engine.jpg","rooms/bottom_engine_fool.jpg","rooms/bottom_engine_win.jpg","rooms/cafeteria1.jpg","rooms/cafeteria2.jpg","rooms/cafeteria3.jpg","rooms/cafeteria4.jpg","rooms/cafeteria5.jpg","rooms/cafeteria6.jpg","rooms/cams.jpg","rooms/communication.jpg","rooms/communication_dead.jpg","rooms/electrical.jpg","rooms/electrical_dead.jpg","rooms/lower_engine.jpg","rooms/lower_engine_open.jpg","rooms/lower_lower_engine.jpg","rooms/medbay.jpg","rooms/navigation.jpg","rooms/o2.jpg","rooms/o2_dead.jpg","rooms/reactor.jpg","rooms/reactor_dead.jpg","rooms/security.jpg","rooms/shields.jpg","rooms/storage.jpg","rooms/upper_engine.jpg","rooms/vote.jpg","rooms/weapons.jpg","items/imposter.png","items/imposter-killed.png","items/shield.png","items/weapon.png","images.ts","audio.ts","GameOver.tsx","Game.tsx","index.tsx"],"names":["Button","styled","button","Room","image","buttons","item","Wrapper","Relative","RoomImage","src","alt","ItemImage","map","text","callback","hide","onClick","div","img","OxygenIndicator","oxygen","Number","span","p","loaded","images","imposter","imposterKilled","shield","weapon","admin","bottomEngine","bottomEngineFool","bottomEngineWin","cafeteria1","cafeteria2","cafeteria3","cafeteria4","cafeteria5","cafeteria6","cams","communication","communicationDead","electrical","electricalDead","lowerEngine","lowerEngineOpen","lowerLowerEngine","medbay","navigation","o2","o2Dead","reactor","reactorDead","security","shields","storage","upperEngine","vote","weapons","Object","values","forEach","Image","onload","audio","fart","Audio","require","default","start","startVote","pickup","die","engine","shot","scan","GameOver","win","reason","reset","Header","GameState","h1","communicationResponses","itemNames","cafeteriaImages","1","2","3","4","5","6","Game","useState","sound","setSound","send","setSend","currentRoom","navigate","items","setItems","setOxygen","stored","setStored","score","setScore","roll","setRoll","enginesFixed","setEnginesFixed","engineDepth","setEngineDepth","sessionData","setSessionData","Explore","gameState","setGameState","gameOverReason","setGameOverReason","info","setInfo","rooms","card","prompt","alert","Fool","Win","objective","Engine","includes","playSound","Lose","cafeteria","upperBound","newRoll","Math","ceil","random","newSessionData","speech","response","floor","length","Vent","Killed","addItem","undefined","concat","setTimeout","location","replaceAll","endsWith","window","open","filter","i","useCallback","element","currentTime","play","useEffect","fetch","method","mode","body","interval","setInterval","clearInterval","Info","Logo","Disclaimer","room","Score","type","checked","onChange","e","target","Inventory","Footer","href","footer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.827652eb.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/fart.6ada0fd9.ogg\";","export default __webpack_public_path__ + \"static/media/start.d1e33b19.ogg\";","export default __webpack_public_path__ + \"static/media/start_vote.a14a8306.ogg\";","export default __webpack_public_path__ + \"static/media/pickup.7f3cdb2e.ogg\";","export default __webpack_public_path__ + \"static/media/die.16c3e5eb.ogg\";","export default __webpack_public_path__ + \"static/media/engine.2e3fe5a3.ogg\";","export default __webpack_public_path__ + \"static/media/shot.a43eafb7.ogg\";","export default __webpack_public_path__ + \"static/media/scan.f401d508.ogg\";","import styled from \"styled-components\";\n\nexport const Button = styled.button`\n    margin: 5px;\n    padding: 25px;\n    background: none;\n    color: white;\n    border: 4px solid white;\n`;\n","import React from 'react';\nimport styled from 'styled-components';\nimport {Button} from './Button';\n\ninterface Props {\n    image: string;\n    buttons: {text: string, callback: () => void, hide?: boolean}[];\n    item?: string;\n}\n\nexport function Room({image, buttons, item}: Props) {\n    return (\n        <>\n            <Wrapper>\n                <Relative>\n                    <RoomImage src={image} alt=\"Room\" />\n                    {item && <ItemImage src={item} alt=\"Item\" />}\n                </Relative>\n                <div>\n                    {buttons.map(({text, callback, hide}) => hide || <Button key={text} onClick={callback}>{text}</Button>)}\n                </div>\n            </Wrapper>\n        </>\n    )\n}\n\nconst Relative = styled.div`\n    position: relative;\n`;\n\nconst Wrapper = styled.div`\n    text-align: center;\n`;\n\nconst RoomImage = styled.img`\n    margin-top: 10px;\n    width: 50vw;\n\n    @media only screen and (max-width: 600px) {\n        width: 90vw;\n    }\n`;\n\nconst ItemImage = styled.img`\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    height: 8vw;\n\n    @media only screen and (max-width: 600px) {\n        height: 15vw;\n    }\n`;\n","import React from 'react';\nimport styled from 'styled-components';\n\ninterface Props {\n    oxygen: number;\n}\n\nexport function OxygenIndicator({oxygen}: Props) {\n    return (\n        <Wrapper>\n            Oxygen: <Number oxygen={oxygen}>{oxygen}</Number>\n        </Wrapper>\n    )\n}\n\nconst Number = styled.span<{oxygen: number}>`\n    color: ${p => p.oxygen > 10 ? 'white' : 'red'};\n`;\n\nconst Wrapper = styled.div`\n    text-align: center;\n    color: white;\n    margin-top: 10px;\n`;\n","export default __webpack_public_path__ + \"static/media/admin.5521b1a2.jpg\";","export default __webpack_public_path__ + \"static/media/bottom_engine.5234af99.jpg\";","export default __webpack_public_path__ + \"static/media/bottom_engine_fool.376b05b8.jpg\";","export default __webpack_public_path__ + \"static/media/bottom_engine_win.ef533e89.jpg\";","export default __webpack_public_path__ + \"static/media/cafeteria1.f1451ede.jpg\";","export default __webpack_public_path__ + \"static/media/cafeteria2.21599caf.jpg\";","export default __webpack_public_path__ + \"static/media/cafeteria3.0e431d32.jpg\";","export default __webpack_public_path__ + \"static/media/cafeteria4.edf11a81.jpg\";","export default __webpack_public_path__ + \"static/media/cafeteria5.12293c75.jpg\";","export default __webpack_public_path__ + \"static/media/cafeteria6.d0b4811a.jpg\";","export default __webpack_public_path__ + \"static/media/cams.4e1f4fbb.jpg\";","export default __webpack_public_path__ + \"static/media/communication.8e67c763.jpg\";","export default __webpack_public_path__ + \"static/media/communication_dead.bb82a48a.jpg\";","export default __webpack_public_path__ + \"static/media/electrical.edfe60c9.jpg\";","export default __webpack_public_path__ + \"static/media/electrical_dead.0a533621.jpg\";","export default __webpack_public_path__ + \"static/media/lower_engine.54ffb832.jpg\";","export default __webpack_public_path__ + \"static/media/lower_engine_open.21d9738b.jpg\";","export default __webpack_public_path__ + \"static/media/lower_lower_engine.af7ad4e5.jpg\";","export default __webpack_public_path__ + \"static/media/medbay.eae8c52b.jpg\";","export default __webpack_public_path__ + \"static/media/navigation.0779da73.jpg\";","export default __webpack_public_path__ + \"static/media/o2.1cb55e26.jpg\";","export default __webpack_public_path__ + \"static/media/o2_dead.2f7536cd.jpg\";","export default __webpack_public_path__ + \"static/media/reactor.aa242836.jpg\";","export default __webpack_public_path__ + \"static/media/reactor_dead.030facde.jpg\";","export default __webpack_public_path__ + \"static/media/security.e4c79814.jpg\";","export default __webpack_public_path__ + \"static/media/shields.3f042060.jpg\";","export default __webpack_public_path__ + \"static/media/storage.79bb436e.jpg\";","export default __webpack_public_path__ + \"static/media/upper_engine.f1a9e2b2.jpg\";","export default __webpack_public_path__ + \"static/media/vote.79db3b40.jpg\";","export default __webpack_public_path__ + \"static/media/weapons.39924e72.jpg\";","export default __webpack_public_path__ + \"static/media/imposter.02ba0846.png\";","export default __webpack_public_path__ + \"static/media/imposter-killed.08243d44.png\";","export default __webpack_public_path__ + \"static/media/shield.8a267359.png\";","export default __webpack_public_path__ + \"static/media/weapon.a41def0f.png\";","import admin from './rooms/admin.jpg';\nimport bottomEngine from './rooms/bottom_engine.jpg';\nimport bottomEngineFool from './rooms/bottom_engine_fool.jpg';\nimport bottomEngineWin from './rooms/bottom_engine_win.jpg';\nimport cafeteria1 from './rooms/cafeteria1.jpg';\nimport cafeteria2 from './rooms/cafeteria2.jpg';\nimport cafeteria3 from './rooms/cafeteria3.jpg';\nimport cafeteria4 from './rooms/cafeteria4.jpg';\nimport cafeteria5 from './rooms/cafeteria5.jpg';\nimport cafeteria6 from './rooms/cafeteria6.jpg';\nimport cams from './rooms/cams.jpg';\nimport communication from './rooms/communication.jpg';\nimport communicationDead from './rooms/communication_dead.jpg';\nimport electrical from './rooms/electrical.jpg';\nimport electricalDead from './rooms/electrical_dead.jpg';\nimport lowerEngine from './rooms/lower_engine.jpg';\nimport lowerEngineOpen from './rooms/lower_engine_open.jpg';\nimport lowerLowerEngine from './rooms/lower_lower_engine.jpg';\nimport medbay from './rooms/medbay.jpg';\nimport navigation from './rooms/navigation.jpg';\nimport o2 from './rooms/o2.jpg';\nimport o2Dead from './rooms/o2_dead.jpg';\nimport reactor from './rooms/reactor.jpg';\nimport reactorDead from './rooms/reactor_dead.jpg';\nimport security from './rooms/security.jpg';\nimport shields from './rooms/shields.jpg';\nimport storage from './rooms/storage.jpg';\nimport upperEngine from './rooms/upper_engine.jpg';\nimport vote from './rooms/vote.jpg';\nimport weapons from './rooms/weapons.jpg';\n\nimport imposter from './items/imposter.png';\nimport imposterKilled from './items/imposter-killed.png';\nimport shield from './items/shield.png';\nimport weapon from './items/weapon.png';\n\nexport let loaded = 0;\n\nexport const images = {\n    // Items\n    imposter,\n    imposterKilled,\n    shield,\n    weapon,\n\n    // Rooms\n    admin,\n    bottomEngine,\n    bottomEngineFool,\n    bottomEngineWin,\n    cafeteria1,\n    cafeteria2,\n    cafeteria3,\n    cafeteria4,\n    cafeteria5,\n    cafeteria6,\n    cams,\n    communication,\n    communicationDead,\n    electrical,\n    electricalDead,\n    lowerEngine,\n    lowerEngineOpen,\n    lowerLowerEngine,\n    medbay,\n    navigation,\n    o2,\n    o2Dead,\n    reactor,\n    reactorDead,\n    security,\n    shields,\n    storage,\n    upperEngine,\n    vote,\n    weapons,\n};\n\n// Preload all images.\nObject.values(images).forEach(image => {\n    const img = new Image();\n    img.src = image;\n    img.onload = () => loaded++;\n});\n","const fart = new Audio(require('./sound/fart.ogg').default);\nconst start = new Audio(require('./sound/start.ogg').default);\nconst startVote = new Audio(require('./sound/start_vote.ogg').default);\nconst pickup = new Audio(require('./sound/pickup.ogg').default);\nconst die = new Audio(require('./sound/die.ogg').default);\nconst engine = new Audio(require('./sound/engine.ogg').default);\nconst shot = new Audio(require('./sound/shot.ogg').default);\nconst scan = new Audio(require('./sound/scan.ogg').default);\n\nexport const audio = {\n    fart,\n    start,\n    startVote,\n    pickup,\n    die,\n    engine,\n    shot,\n    scan,\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport {Button} from './Button';\n\n\ninterface Props {\n    win: boolean;\n    reason: string;\n    reset: () => void;\n}\n\nexport function GameOver({win, reason, reset}: Props) {\n    return (\n        <Wrapper>\n            <Header win={win}>{win ? 'Victory' : 'Defeat'}</Header>\n            <h4>{reason}</h4>\n            <Button onClick={reset}>Play Again</Button>\n        </Wrapper>\n    );\n}\n\nconst Header = styled.h1<{win: boolean}>`\n    color: ${p => p.win ? 'lightgreen' : 'red'};\n`;\n\nconst Wrapper = styled.div`\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100vw;\n    height: 100vh;\n    background-color: rgba(0, 0, 0, 0.75);\n    color: white;\n    text-align: center;\n    padding-top: 20vh;\n`","import React, {useCallback, useEffect, useState} from 'react';\nimport {Room} from './Room';\nimport styled from 'styled-components';\nimport {OxygenIndicator} from './OxygenIndicator';\n\nimport {images} from './images';\nimport {audio} from './audio';\n\nimport {GameOver} from \"./GameOver\";\nimport {Button} from './Button';\n\nenum GameState {\n    Explore,\n    Vent,\n    Killed,\n    Engine,\n    Fool,\n    Win,\n    Lose,\n}\n\nconst communicationResponses = [\n    \"Huh?\",\n    \"I wasn't listening. What did you say?\",\n    \"Excuse me?\",\n    \"What?\",\n    \"...\",\n];\n\nconst itemNames: {[item: string]: string} = {\n    imposterKilled: 'Crewmate',\n    shield: 'Shield',\n    weapon: 'Weapon',\n}\n\nconst cafeteriaImages: {[roll: number]: string} = {\n    1: images.cafeteria1,\n    2: images.cafeteria2,\n    3: images.cafeteria3,\n    4: images.cafeteria4,\n    5: images.cafeteria5,\n    6: images.cafeteria6,\n};\n\nexport function Game() {\n    const [sound, setSound] = useState(true);\n    const [send, setSend] = useState<boolean | null>(null);\n    const [currentRoom, navigate] = useState('cafeteria');\n    const [items, setItems] = useState<('weapon' | 'shield' | 'imposterKilled')[]>([]);\n    const [oxygen, setOxygen] = useState(100);\n    const [stored, setStored] = useState<'weapon' | 'shield' | 'imposterKilled' | null>(null);\n    const [score, setScore] = useState(0);\n    const [roll, setRoll] = useState(5);\n    const [enginesFixed, setEnginesFixed] = useState<number[]>([]);\n    const [engineDepth, setEngineDepth] = useState(2);\n    const [sessionData, setSessionData] = useState('**Game**:');\n\n    const [gameState, setGameState] = useState(GameState.Explore);\n    const [gameOverReason, setGameOverReason] = useState('');\n    // TODO: This can be figured out through game state.\n    const [info, setInfo] = useState<{ text: string, objective: string } | null>(null);\n\n    const rooms: { [room: string]: React.ComponentProps<typeof Room> } = {\n        admin: {\n            image: images.admin,\n            buttons: [\n                {text: 'Cafeteria', callback: () => navigate('cafeteria')},\n                {text: 'Storage', callback: () => navigate('storage')},\n                {\n                    text: 'Swipe Card', callback: () => {\n                        const card = prompt('Enter your credit card:');\n                        if (card) {\n                            setSessionData(`${sessionData}\\nCard: ${card}`);\n                            alert('Thanks!');\n                        }\n                    }\n                },\n            ],\n        },\n        bottomEngine: {\n            image: gameState === GameState.Fool ? images.bottomEngineFool : (gameState === GameState.Win ? images.bottomEngineWin : images.bottomEngine),\n            buttons: [\n                {\n                    text: 'Higher', callback: () => {\n                        navigate('lowerLowerEngine');\n                    }\n                },\n                {\n                    text: 'Give Imposter', callback: () => {\n                        setInfo({\n                            text: 'You have to fix that engine!',\n                            objective: 'Use the weapon.',\n                        });\n                        setGameState(GameState.Fool);\n                    }, hide: gameState !== GameState.Engine || !items.includes('imposterKilled')\n                },\n                {\n                    text: 'Shoot', callback: () => {\n                        if (!items.includes('shield')) {\n                            setGameOverReason('Your attack was too slow, he hit you first. If only you had a shield.');\n                            setGameState(GameState.Lose);\n                        } else {\n                            playSound(audio.shot);\n                            setGameOverReason('Good job.');\n                            setGameState(GameState.Win);\n                        }\n                    }, hide: gameState !== GameState.Fool || !items.includes('weapon')\n                },\n                {\n                    text: 'Fix engine', callback: () => {\n                        setGameOverReason('Good job.');\n                        setGameState(GameState.Win);\n                    }, hide: gameState !== GameState.Win\n                }\n            ],\n        },\n        cafeteria: {\n            image: cafeteriaImages[roll],\n            buttons: [\n                {text: 'Medbay', callback: () => navigate('medbay')},\n                {text: 'Admin', callback: () => navigate('admin')},\n                {text: 'Weapons', callback: () => navigate('weapons')},\n                {\n                    text: 'Red Button', callback: () => {\n                        // Don't let the user die too early.\n                        const upperBound = score < 10 ? 4 : 6;\n                        let newRoll = Math.ceil(Math.random() * upperBound);\n                        if (roll === newRoll) newRoll += 1;\n                        if (newRoll === 6) {\n                            setGameOverReason('You were crushed by a table.');\n                            setGameState(GameState.Lose);\n                        } else setScore(score + newRoll);\n                        setRoll(newRoll);\n                        playSound(audio.die);\n                    }\n                },\n            ],\n        },\n        cams: {\n            image: images.cams,\n            buttons: [\n                {text: 'Back', callback: () => navigate('security')},\n            ],\n        },\n        communication: {\n            image: images.communication,\n            buttons: [\n                {text: 'Storage', callback: () => navigate('storage')},\n                {text: 'Shields', callback: () => navigate('shields')},\n                {\n                    text: 'Communicate', callback: () => {\n                        let newSessionData = sessionData;\n                        while (true) {\n                            const speech = prompt('What do you want to say? (cancel to stop)');\n                            if (speech) {\n                                const response = communicationResponses[Math.floor(Math.random() * communicationResponses.length)];\n                                newSessionData += `\\nSpeech: ${speech}\\nResponse: ${response}`;\n                                alert(`Crewmate: \"${response}\"`);\n                            } else break;\n                        }\n                        setSessionData(newSessionData);\n                    }, hide: ![GameState.Explore, GameState.Vent].includes(gameState)\n                },\n                {\n                    text: 'Shoot Crewmate', callback: () => {\n                        playSound(audio.shot);\n                        if (items.includes('shield')) {\n                            navigate('communicationDead');\n                            setGameOverReason('Your shield blocked the bullet, ricocheting and killing you.');\n                            setGameState(GameState.Lose);\n                        } else {\n                            setInfo({\n                                text: 'You killed the engineer!',\n                                objective: 'Do something with the body.',\n                            });\n                            setGameState(GameState.Killed);\n                        }\n                    }, hide: gameState !== GameState.Vent || !items.includes('weapon')\n                },\n                {\n                    text: 'Report Dead Body', callback: () => {\n                        navigate('vote');\n                        playSound(audio.startVote);\n                    }, hide: gameState !== GameState.Killed || items.includes('imposterKilled')\n                },\n                {\n                    text: 'Take Crewmate', callback: () => {\n                        addItem('imposterKilled');\n                        setInfo({\n                            text: 'The engineer is dead. Without him, the engines quickly broke down.',\n                            objective: 'Fix the engines.',\n                        });\n                        setGameState(GameState.Engine);\n                    }, hide: gameState !== GameState.Killed || items.includes('imposterKilled')\n                },\n            ],\n            item: [GameState.Explore, GameState.Vent].includes(gameState) ? images['imposter'] : (items.includes('imposterKilled') ? undefined : images['imposterKilled']),\n        },\n        communicationDead: {\n            image: images.communicationDead,\n            buttons: [],\n        },\n        electrical: {\n            image: images.electrical,\n            buttons: [\n                {text: 'Lower Engine', callback: () => navigate('lowerEngine')},\n                {text: 'Storage', callback: () => navigate('storage')},\n                {\n                    text: 'Touch wires', callback: () => {\n                        navigate('electricalDead');\n                        setGameOverReason('You were electrocuted.');\n                        setGameState(GameState.Lose);\n                    }\n                },\n            ],\n        },\n        electricalDead: {\n            image: images.electricalDead,\n            buttons: [],\n        },\n        lowerEngine: {\n            image: enginesFixed.includes(1) ? images.lowerEngineOpen : images.lowerEngine,\n            buttons: [\n                {text: 'Reactor', callback: () => navigate('reactor')},\n                {text: 'Electrical', callback: () => navigate('electrical')},\n                {\n                    text: 'Fix engine', callback: () => {\n                        if (!enginesFixed.includes(0)) alert('You have to fix the upper engine first.');\n                        else {\n                            setInfo({\n                                text: \"Don't forget about the lower engines.\",\n                                objective: 'Fix all engines.',\n                            });\n                            setEnginesFixed([...enginesFixed, 1]);\n                            playSound(audio.engine);\n                        }\n                    }, hide: gameState !== GameState.Engine || enginesFixed.includes(1)\n                },\n                {\n                    text: 'Lower', callback: () => {\n                        navigate('lowerLowerEngine');\n                    }, hide: !enginesFixed.includes(1)\n                },\n            ],\n        },\n        lowerLowerEngine: {\n            image: images.lowerLowerEngine,\n            buttons: [\n                {\n                    text: 'Lower', callback: () => {\n                        if (engineDepth === 5) navigate('bottomEngine');\n                        else setEngineDepth(engineDepth + 1);\n                    }\n                },\n                {\n                    text: 'Higher', callback: () => {\n                        if (engineDepth === 2) navigate('lowerEngine');\n                        else setEngineDepth(engineDepth - 1);\n                    }\n                },\n                {\n                    text: 'Fix engine',\n                    callback: () => {\n                        setEnginesFixed([...enginesFixed, engineDepth]);\n                        playSound(audio.engine);\n                    },\n                    hide: enginesFixed.includes(engineDepth)\n                },\n            ],\n        },\n        medbay: {\n            image: images.medbay,\n            buttons: [\n                {text: 'Upper Engine', callback: () => navigate('upperEngine')},\n                {text: 'Cafeteria', callback: () => navigate('cafeteria')},\n            ].concat(items.map(item => ({\n                text: `Scan ${itemNames[item]}`,\n                callback: () => {\n                    playSound(audio.scan);\n                    setTimeout(() => alert(`Yep, that's a ${itemNames[item]}.`), 100);\n                },\n                hide: stored !== null,\n            }))),\n        },\n        navigation: {\n            image: images.navigation,\n            buttons: [\n                {text: 'O2', callback: () => navigate('o2')},\n                {text: 'Shields', callback: () => navigate('shields')},\n                {\n                    text: 'Navigate', callback: () => {\n                        let location = prompt('Where do you want to navigate to?');\n                        if (location) {\n                            location = location.replaceAll(' ', '');\n                            location = (location.includes('.') && !location.endsWith('.')) ? location : `${location}.com`;\n                            setSessionData(`${sessionData}\\nNavigated to: ${location}`);\n                            window.open(`//${location}`);\n                        }\n                    }\n                },\n            ],\n        },\n        o2: {\n            image: images.o2,\n            buttons: [\n                {text: 'Weapons', callback: () => navigate('weapons')},\n                {text: 'Navigation', callback: () => navigate('navigation')},\n                {\n                    text: 'Breathe', callback: () => {\n                        if (oxygen === 105) {\n                            navigate('o2Dead');\n                            setGameOverReason('You hyperventilated.');\n                            setGameState(GameState.Lose);\n                        } else if (oxygen >= 100) setOxygen(oxygen + 1);\n                        else setOxygen(100);\n                    }\n                },\n            ],\n        },\n        o2Dead: {\n            image: images.o2Dead,\n            buttons: [],\n        },\n        reactor: {\n            image: images.reactor,\n            buttons: [\n                {text: 'Security', callback: () => navigate('security')},\n                {text: 'Lower Engine', callback: () => navigate('lowerEngine')},\n                {\n                    text: 'Shoot Reactor', callback: () => {\n                        navigate('reactorDead');\n                        setGameOverReason('Why did you think that was a good idea?');\n                        setGameState(GameState.Lose);\n                    }, hide: !items.includes('weapon')\n                }\n            ],\n        },\n        reactorDead: {\n            image: images.reactorDead,\n            buttons: [],\n        },\n        security: {\n            image: images.security,\n            buttons: [\n                {text: 'Upper Engine', callback: () => navigate('upperEngine')},\n                {text: 'Reactor', callback: () => navigate('reactor')},\n                {\n                    text: 'Check Cams', callback: () => {\n                        setInfo({\n                            text: 'The crewmate in communication is venting!',\n                            objective: 'Kill the sus crewmate.',\n                        });\n                        setGameState(GameState.Vent);\n                        navigate('cams');\n                    }\n                },\n            ],\n        },\n        shields: {\n            image: images.shields,\n            buttons: [\n                {text: 'Navigation', callback: () => navigate('navigation')},\n                {text: 'Communication', callback: () => navigate('communication')},\n                {text: 'Take Shield', callback: () => addItem('shield'), hide: items.includes('shield')},\n            ],\n            item: items.includes('shield') ? undefined : images.shield,\n        },\n        storage: {\n            image: images.storage,\n            buttons: [\n                {text: 'Admin', callback: () => navigate('admin')},\n                {text: 'Electrical', callback: () => navigate('electrical')},\n                {text: 'Communication', callback: () => navigate('communication')},\n                {\n                    text: `Take ${itemNames[stored!]}`, callback: () => {\n                        setStored(null);\n                        addItem(stored!);\n                    }, hide: stored === null\n                }\n            ].concat(items.map(item => ({\n                text: `Store ${itemNames[item]}`,\n                callback: () => {\n                    setStored(item);\n                    setItems(items.filter(i => i !== item));\n                    playSound(audio.pickup);\n                },\n                hide: stored !== null,\n            }))),\n            item: stored ? images[stored] : undefined,\n        },\n        upperEngine: {\n            image: images.upperEngine,\n            buttons: [\n                {text: 'Medbay', callback: () => navigate('medbay')},\n                {text: 'Security', callback: () => navigate('security')},\n                {\n                    text: 'Fix engine',\n                    callback: () => {\n                        setEnginesFixed([...enginesFixed, 0]);\n                        playSound(audio.engine);\n                    },\n                    hide: gameState !== GameState.Engine || enginesFixed.includes(0)\n                },\n            ],\n        },\n        vote: {\n            image: images.vote,\n            buttons: [\n                {\n                    text: 'You', callback: () => {\n                        setGameOverReason('You were voted off.');\n                        setGameState(GameState.Lose);\n                    }\n                },\n            ]\n        },\n        weapons: {\n            image: images.weapons,\n            buttons: [\n                {text: 'Cafeteria', callback: () => navigate('cafeteria')},\n                {text: 'O2', callback: () => navigate('o2')},\n                {text: 'Take Weapon', callback: () => addItem('weapon'), hide: items.includes('weapon')},\n            ],\n            item: items.includes('weapon') ? undefined : images.weapon,\n        },\n    }\n\n    const playSound = useCallback((element: HTMLAudioElement) => {\n        if (!sound) return;\n\n        element.currentTime = 0;\n        element.play();\n    }, [sound]);\n\n    const addItem = useCallback((item: 'weapon' | 'shield' | 'imposterKilled') => {\n        setItems([...items, item]);\n        playSound(audio.pickup);\n    }, [items, playSound]);\n\n    const reset = useCallback(() => {\n        navigate('cafeteria');\n        setItems([]);\n        setOxygen(100);\n        setStored(null);\n        setScore(0);\n        setRoll(5);\n        setEnginesFixed([]);\n        setEngineDepth(2);\n        setGameState(GameState.Explore);\n        setGameOverReason('');\n        setInfo(null);\n        setSessionData('**Game**:');\n        playSound(audio.start);\n    }, [playSound]);\n\n    useEffect(() => {\n        if (gameState === GameState.Lose) playSound(audio.fart);\n\n        if ([GameState.Win, GameState.Lose].includes(gameState)) {\n            if (send && (sessionData.length > 9 || score > 50)) {\n                fetch('https://script.google.com/macros/s/AKfycbyl6yEkNR7KM3kZVOcHkp6ev91DWwkNf25XaIU0p-T9PH0EY0UGMEmZ/exec', {\n                    method: 'POST',\n                    mode: 'no-cors',\n                    body: `${sessionData}\\nScore: ${score}\\n${gameOverReason}`,\n                });\n            }\n\n            return;\n        }\n    }, [send, gameState, sessionData, gameOverReason, score, playSound]);\n\n    useEffect(() => {\n        if (send === null) return;\n\n        const interval = setInterval(() => {\n            if (oxygen === 1) {\n                setGameOverReason('You ran out of oxygen.');\n                setGameState(GameState.Lose);\n            }\n            setOxygen(oxygen - 1);\n        }, 1000);\n\n        return () => clearInterval(interval);\n    }, [send, oxygen]);\n\n    if (send === null) {\n        return (\n            <Info>\n                <Logo src=\"/favicon.ico\" alt=\"Amogus\"/>\n                <h2>Amogus</h2>\n                <Disclaimer>Just letting you know, some actions in this game are recorded since I find it funny to see how players interact with the game.</Disclaimer>\n                <Disclaimer>All data is submitted 100% anonymously. No cookies are used. But if you're uncomfortable with this, you can opt out anyway.</Disclaimer>\n                <Button onClick={() => {\n                    setSend(false);\n                    playSound(audio.start);\n                }}>Opt Out</Button>\n                <Button onClick={() => {\n                    setSend(true);\n                    playSound(audio.start);\n                }}>That's Fine</Button>\n            </Info>\n        );\n    }\n\n    const room = rooms[currentRoom];\n    return (\n        <>\n            {info &&\n            <>\n                <Info>\n                    <h3>{info.text}</h3>\n                    <h4>Objective: {info.objective}</h4>\n                </Info>\n            </>\n            }\n            <Room {...room} />\n            {score === 0 ||\n            <Score>\n                <h3>Score: {score}</h3>\n            </Score>\n            }\n            <OxygenIndicator oxygen={oxygen}/>\n            <Info>Sound: <input type=\"checkbox\" checked={sound} onChange={e => setSound(e.target.checked)}/></Info>\n            {items.length === 0 ||\n            <Inventory>\n                <h3>Inventory</h3>\n                {items.map(item => <img key={item} src={images[item]} alt=\"Item\"/>)}\n            </Inventory>\n            }\n            {[GameState.Win, GameState.Lose].includes(gameState) &&\n            <GameOver win={gameState === GameState.Win} reason={gameOverReason} reset={reset}/>}\n            <Footer>\n                {/* Page is trusted. */}\n                {/* eslint-disable-next-line react/jsx-no-target-blank */}\n                <a href=\"https://doteye.online\" target=\"_blank\">More Stuff Here</a>\n            </Footer>\n        </>\n    );\n}\n\nconst Logo = styled.img`\n    margin-top: 15px;\n`;\n\nconst Disclaimer = styled.p`\n    margin-left: auto;\n    margin-right: auto;\n    max-width: 500px;\n    padding: 0 10px 0 10px;\n`\n\nconst Info = styled.div`\n    text-align: center;\n    color: white;\n`;\n\nconst Score = styled.div`\n    position: fixed;\n    bottom: 10px;\n    right: 10px;\n    background-color: white;\n    text-align: center;\n    border-radius: 5px;\n    padding: 20px;\n`;\n\nconst Inventory = styled.div`\n    position: fixed;\n    top: 10px;\n    right: 10px;\n    background-color: white;\n    text-align: center;\n    border-radius: 5px;\n  \n    img {\n        height: 100px;\n        display: block;\n    }\n\n    @media only screen and (max-width: 600px) {\n        position: static;\n        margin: 0 15px 0 15px;\n      \n        img {\n            display: inline;\n        }\n    }\n`;\n\nconst Footer = styled.footer`\n    position: fixed;\n    left: 10px;\n    bottom: 10px;\n  \n    a {\n        color: white;\n        text-decoration: none;\n    }\n`;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {Game} from './Game';\n\nReactDOM.render(\n    <React.StrictMode>\n        <Game />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}